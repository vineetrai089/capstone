version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  aws-cli: circleci/aws-cli@3.1.1

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks.
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            aws delete cluster --stack-name --region=us-west-2 "eksctl-${CIRCLE_WORKFLOW_ID:0:7}"

jobs:
  build:
    docker:
      - image: python:3.7.3-stretch

    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv .devops
            source .devops/bin/activate
            make install
      - run:
          name: run lint
          command: |
            source .devops/bin/activate
            make lint

  upload-docker:
    docker:
      - image: cimg/go:1.17
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build docker container
          command: |
            docker build --tag=hello-udacity-image .
            docker image ls
      - run:
          name: Upload Docker to Dockerhub
          command: |
            dockerpath="vineetrai089/hello-udacity-image"
            docker login --username=vineetrai089 --password=$DOCKER_PASS
            docker tag "hello-udacity-image" "${dockerpath}:${CIRCLE_WORKFLOW_ID:0:7}"
            docker tag "hello-udacity-image" "${dockerpath}:latest"
            docker push "${dockerpath}:${CIRCLE_WORKFLOW_ID:0:7}"
            docker push "${dockerpath}:latest"

  deploy:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install dependancies
          command: |
            yum install -y tar gzip
            curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.22.6/2022-03-09/bin/linux/amd64/kubectl
            install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
      - run:
          name: create new cluster
          command: |
            if eksctl create cluster --name devops --region=us-west-2
            then
              echo "creating new Stack"
              aws eks update-kubeconfig --name devops --region us-west-2
              kubectl create deploy devops --image="vineetrai089/hello-udacity-image:${CIRCLE_WORKFLOW_ID:0:7}"
              kubectl expose deployment devops --type=LoadBalancer --port=80 --target-port=80
            else
              aws eks update-kubeconfig --name devops --region us-west-2
              echo "update existing Stack"
              kubectl get deploy,rs,svc,pods
              kubectl set image deployment/devops hello-udacity-image="vineetrai089/hello-udacity-image:${CIRCLE_WORKFLOW_ID:0:7}"
            fi

  smoke-test:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Install dependancies
          command: |
            curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.22.6/2022-03-09/bin/linux/amd64/kubectl
            install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - run:
          name: Test load balancer
          command: |
            aws eks update-kubeconfig --name devops --region us-west-2
            if curl -s http://a115bdbb1f1da47d39ae427c9749753b-187578367.us-west-2.elb.amazonaws.com/ | grep "Vineet"
            then
              echo "Verified!"
            else
              kubectl rollout undo deployments/devops
            fi

workflows:
  default:
    jobs:
      - build
      - upload-docker:
          requires: [build]
      - deploy:
          requires: [upload-docker]
          filters:
            branches:
              only: [main]
      - smoke-test:
          requires: [deploy]
